本文概述了句子对齐过程以及如何使用可扩展的管道构建它们。我们还讨论了作为 Project Anuvaad（一个基于印度语的翻译系统）的一部分在执行大规模对齐方面所面临的挑战，以及如何使用 FAISS 对其进行优化以显着提高双语语料库的管理性能。我们是印度最大的公开平行语料库 samanantar 的最大贡献者之一。我们也将成为 ULCA（通用语言贡献 API）系统的早期贡献者。
双语句子对齐
双语句子对齐（或跨语言语义相似性）被定义为搜索两个可用的句子集合并在其中识别有意义匹配的句子对（如果有）。
首先，要详细了解整个过程，让我们从基础开始。考虑两个具有相似（但不完全匹配）句子的列表。
aligner 背后的想法是识别“我的名字是阿斯温”和“阿斯温，那是我的名字”这样的情况都是相似的。
尽管问题乍一看似乎很复杂，但有许多方法可以实现这一目标。可以使用 Fuzzywuzzy、Word2vec、TF-IDF 等基本方法来实现相同的目的。不过，在复杂输入中提取质量对有点棘手，我们将在后面讨论。但是，这里的想法是要确定如果语言对是英语-英语，这样做相对简单。可以参考这篇文章来详细了解这里的各种方法。
下面的代码解释了一种在语言为 en-en 时查找匹配对的简单方法。
即使这种简单的方法在基本情况下有效，我们也不能指望它在复杂和模棱两可的情况下提供理想的输出。因此，我们需要切换到基于模型的方法。此外，由于我们的目标是对双语文本进行对齐，现在让我们从现在开始在这种情况下思考，因为同样的方法也可以应用于单语案例。
为了实现这一点，我们利用预训练的编码器-解码器模型将这些句子转换为向量表示，然后使用这些向量表示（称为嵌入）来计算句子之间的相似度。在进一步搜索中，我们入围了两个模型，LASER（来自 Facebook）和 LaBSE（来自 Google）。在本文中，Vishal Mahuli 解释了它们之间的比较。由于 LaBSE 为印度语言提供了更好的输出，因此它被用作 Anuvaad 项目 (https://anuvaad.org/) 的一部分。
基本实现
使用 LaBSE 为源语言和目标语言句子的所有句子生成向量嵌入。计算每个句子对之间的余弦距离，具有最大余弦相似度的句子对将被视为一对。